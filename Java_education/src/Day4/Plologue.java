package Day4;

public class Plologue {
}
// 절차지향 프로그램은 C언어와 같은 케이스이다. 절차가 중심으로 명령어의 순서와 흐름이 중요하다.
// 여기서 외부에서 값을 받아 처리할 수 있지만 대체로 하나의 코드 뭉텅이 안에서 진행된다.
// 객체지향 프로그래밍은 현실세계를 객체 단위로 프로그래밍 하며 객체는 필드(데이터)와 메서드(코드)를 하나로 묶어 구성한다.
// 절차지향에서의 코드를 함수,프로시저라고 하며 객체지향에서는 메서드라고 한다.

// 캡슐화
// 필드와 매서드를 하나의 캡슐처럼 포장하여 외부에서 알 수 없게 만든다.
// 정보은닉을 위해 사용한다.  외부에서 이루어지는 접근을 차단한다.
// 상속
// 부모 객체를 상속받은 자녀객체는 부모객체의 메서드와 필드를 사용할 수 있다.
// 다형성
// 동물이라는 속성이 비슷해도 달리고, 날아가고, 수영하는 등 방식이 다르다.
// 메세지가 동일해도 반응은 다를 수 있다. 동일한 명령을 내려도 객체의 종류에 따라 다른 결과가 나온다.
//
// 확장자를 제외한 파일 이름은 클래스의 이름과 같아야 한다. 자바는 어쩔 수 없다.
// 물론 2개 이상의 클래스를 하나의 파일로 선언할 수 있다.
//
// 변수선언은 다음과 같이 이루어진다.
// 클래스이름 변수;
// 변수 = new 클래스이름();
// 그래서 다음과 같이 객체생성을 변수선언과 동시에 진행 가능하다.
// 클래스이름 변수 = new 클래스이름();